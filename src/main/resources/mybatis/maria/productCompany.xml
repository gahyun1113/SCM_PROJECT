<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.jhta_2402_2_final.dao.product.ProductCompanyDao">
    <!-- 생산 업체의 현재 생산품 리스트 가져옴 -->
    <select id="getSourcesByCompanyName" resultType="Map" parameterType="String">
        select
        sp.SOURCE_PRICE_ID as 'companySourceId',
        s.NAME as 'sourceName',
        PRICE as 'sourcePrice',
        COALESCE((SELECT SUM(quantity)
            FROM SOURCE_WAREHOUSE sw
            WHERE sw.SOURCE_PRICE_ID = sp.SOURCE_PRICE_ID), 0) AS totalQuantity
        from SOURCE_PRICE sp
        join SOURCE s ON s.source_id = sp.source_id
        join PRODUCT_COMPANY pc ON pc.product_company_id = sp.product_company_id
        <if test="companyName != null and companyName != ''">
            where pc.NAME = #{companyName}
        </if>
    </select>

    <!-- 생산업체 생산품 등록 Create, Update, Delete -->
    <insert id="addSourceToCompany" parameterType="Map">
        INSERT INTO
            SOURCE_PRICE (SOURCE_PRICE_ID, PRODUCT_COMPANY_ID, SOURCE_ID, PRICE)
        VALUES
            (UUID(), #{companyId}, #{sourceId}, #{sourcePrice})
    </insert>
    <update id="sourcePriceUpdate" parameterType="map">
        UPDATE SOURCE_PRICE SET price = #{sourcePrice} WHERE source_price_id = #{companySourceId}
    </update>
    <delete id="deleteSourceFromCompany" parameterType="Map">
        DELETE FROM SOURCE_PRICE WHERE SOURCE_PRICE_ID = #{companySourceId}
    </delete>

    <!-- 생산품 실제 생산 -->
    <insert id="produceSource" parameterType="map">
        INSERT into SOURCE_WAREHOUSE (SOURCE_WAREHOUSE_ID, QUANTITY, PRODUCE_DATE, SOURCE_PRICE_ID)
        VALUES (UUID(), #{sourceQuantity}, NOW(), #{sourcePriceId})
    </insert>

    <!-- 생산한 제품 리스트 가져옴 -->
    <select id="getWarehouseSources" resultType="map" parameterType="String">
        SELECT
            sw.source_warehouse_id as sourceWarehouseId,
            sw.QUANTITY as sourceQuantity,
            DATE_FORMAT(sw.produce_date, '%Y-%m-%d') as produceDate,
            s.name as sourceName
        FROM SOURCE_WAREHOUSE sw
        JOIN SOURCE_PRICE sp on sp.SOURCE_PRICE_ID = sw.SOURCE_PRICE_ID
        JOIN SOURCE s on s.SOURCE_ID = sp.SOURCE_ID
        JOIN PRODUCT_COMPANY pc ON pc.PRODUCT_COMPANY_ID = sp.PRODUCT_COMPANY_ID
        WHERE pc.NAME = #{companyName}
    </select>

    <!-- 주문 주문 주문 주문 주문 -->
    <select id="getProductOrderList" resultType="map">
        SELECT
            po.PRODUCT_ORDER_ID as orderId,
            s.NAME AS sourceName,
            sp.PRICE AS sourcePrice,
            po.QUANTITY AS quantity,
            (sp.PRICE * po.QUANTITY) AS totalPrice,
            DATE_FORMAT(po.PRODUCT_ORDER_DATE, '%Y-%m-%d %h:%m') AS orderDate,
            st.STATUS AS orderStatus,
            sp.SOURCE_PRICE_ID as sourcePriceId
        FROM PRODUCT_ORDER po
        JOIN SOURCE_PRICE sp ON po.SOURCE_PRICE_ID = sp.SOURCE_PRICE_ID
        JOIN PRODUCT_COMPANY pc ON pc.PRODUCT_COMPANY_ID = sp.PRODUCT_COMPANY_ID
        JOIN SOURCE s ON sp.SOURCE_ID = s.SOURCE_ID
        JOIN STATUS st ON st.STATUS_ID = po.STATUS_ID
        WHERE pc.NAME = #{companyName}
    </select>
    <update id="orderProcess" parameterType="map">
        update PRODUCT_ORDER set STATUS_ID = #{orderStatus} where PRODUCT_ORDER_ID = #{orderId}
    </update>
    <insert id="outboundSource" parameterType="map">
        INSERT into SOURCE_WAREHOUSE (SOURCE_WAREHOUSE_ID, QUANTITY, PRODUCE_DATE, SOURCE_PRICE_ID)
        VALUES (UUID(), -#{sourceQuantity}, NOW(), #{sourcePriceId})
    </insert>
    <!-- 주문 끝 -->


    <!-- 모든 재료 리스트 -->
    <select id="getAllSources" resultType="SourceDto" parameterType="String">
        SELECT s.SOURCE_ID as 'sourceId', s.NAME as 'sourceName'
        FROM SOURCE s
        WHERE NOT EXISTS (
            SELECT 1
            FROM SOURCE_PRICE sp
            JOIN PRODUCT_COMPANY pc ON sp.PRODUCT_COMPANY_ID = pc.PRODUCT_COMPANY_ID
            WHERE sp.SOURCE_ID = s.SOURCE_ID
            AND pc.NAME = #{companyName}
        )
    </select>

    <!-- 입력한 sourceName 값으로 Id 가져오기, 없으면 등록할거임 -->
    <select id="getSourceIdByName" parameterType="String" resultType="String">
        SELECT SOURCE_ID FROM SOURCE WHERE NAME = #{sourceName}
    </select>
    <insert id="addSource" parameterType="map">
        INSERT INTO SOURCE (SOURCE_ID, NAME) VALUES (#{sourceId}, #{sourceName})
    </insert>
    <select id="getCompanyIdByName" parameterType="String" resultType="String">
        select product_company_id from PRODUCT_COMPANY where NAME = #{companyName}
    </select>

    <select id="getSourceQuantityFromWarehouse" parameterType="String" resultType="int">
        select quantity from SOURCE_WAREHOUSE WHERE SOURCE_PRICE_ID = #{sourcePriceId}
    </select>

    <select id="checkDuplicateCompanySource" parameterType="map" resultType="boolean">
        SELECT COUNT(*)
        FROM SOURCE_PRICE sp
        JOIN SOURCE s on sp.SOURCE_ID = s.SOURCE_ID
        JOIN PRODUCT_COMPANY pc on pc.PRODUCT_COMPANY_ID = sp.PRODUCT_COMPANY_ID
        WHERE pc.PRODUCT_COMPANY_ID = #{companyId} and (s.SOURCE_ID = #{sourceId} or s.NAME = #{sourceName})
    </select>
</mapper>